/* Reading File 0 */
PROC IMPORT OUT = demographic_data 
            DATAFILE= "C:\Chirag\Study\2_Spring 2017\Marketing Predictive Analytics using SAS - BUAN 6337\Project\Aadesh_Yogurt - Modified\0_ads demo1.csv" 
            DBMS=csv REPLACE;
			GETNAMES=YES; 
RUN;

/* Reading File 1 */
PROC IMPORT OUT = delivery_stores 
            DATAFILE= "C:\Chirag\Study\2_Spring 2017\Marketing Predictive Analytics using SAS - BUAN 6337\Project\Aadesh_Yogurt - Modified\1_Delivery_Stores (without duplicates).csv" 
            DBMS=csv REPLACE;
			GETNAMES=YES; 
RUN;

/* Reading File 2 */
PROC IMPORT OUT = yogurt_brand_data 
            DATAFILE= "C:\Chirag\Study\2_Spring 2017\Marketing Predictive Analytics using SAS - BUAN 6337\Project\Aadesh_Yogurt - Modified\2_prod_yogurt.csv" 
            DBMS=csv REPLACE;
			GETNAMES=YES; 
RUN;

PROC PRINT DATA=yogurt_brand_data (obs=10);
RUN;

/* Reading File 3 */
PROC IMPORT OUT = yogurt_drug
            DATAFILE= "C:\Chirag\Study\2_Spring 2017\Marketing Predictive Analytics using SAS - BUAN 6337\Project\Aadesh_Yogurt - Modified\3_yogurt_drug_1114_1165.csv" 
            DBMS=csv REPLACE;
			GETNAMES=YES; 
RUN;

/* Reading File 4 */
DATA GROCERY;
INFILE "C:\Chirag\Study\2_Spring 2017\Marketing Predictive Analytics using SAS - BUAN 6337\Project\Aadesh_Yogurt - Modified\4_yogurt_groc_1114_1165" firstobs=2;
INPUT IRI_KEY WEEK SY GE VEND ITEM UNITS DOLLARS F$ D PR;
RUN;

/* Filtering Yougurt_grocery with IRI_KEY in Yogurt_panel_gr file*/
DATA yogurt_groc_sample;
SET GROCERY;
IF IRI_KEY = 266596 or
IRI_KEY = 259111 or
IRI_KEY = 257871 or
IRI_KEY = 257006 or
IRI_KEY = 234140 or
IRI_KEY = 652159 or
IRI_KEY = 233779 or
IRI_KEY = 653776 or
IRI_KEY = 213290 or
IRI_KEY = 648764 or
IRI_KEY = 248128 or
IRI_KEY = 264075 or
IRI_KEY = 228037 or
IRI_KEY = 213592 or
IRI_KEY = 200564 or
IRI_KEY = 9979663 or
IRI_KEY = 9979660 or
IRI_KEY = 9979877 or
IRI_KEY = 9979671 or
IRI_KEY = 9979673 or
IRI_KEY = 9979668 or
IRI_KEY = 9979872 or
IRI_KEY = 250845 or
IRI_KEY = 260890 or
IRI_KEY = 534944 or
IRI_KEY = 9979672 or
IRI_KEY = 9979664 then output;
RUN;

/* COLUPC datatype conversion from char to Best32.*/

DATA TEMP;
SET YOGURT_GROC_SAMPLE;
NEWCOLUPC=INPUT(COLUPC,BEST32.);
RUN;
PROC CONTENTS DATA=TEMP;
RUN;
DATA YOGURT_GROC_SAMPLE (DROP=COLUPC);
SET TEMP;
RENAME NEWCOLUPC=COLUPC;
RUN;
PROC CONTENTS DATA=YOGURT_GROC_SAMPLE;
RUN;



/* Reading File 5 */
PROC IMPORT OUT = yogurt_panel_drug
            DATAFILE= "C:\Chirag\Study\2_Spring 2017\Marketing Predictive Analytics using SAS - BUAN 6337\Project\Aadesh_Yogurt - Modified\5_yogurt_PANEL_DR_1114_1165.csv" 
            DBMS=csv REPLACE;
			GETNAMES=YES; 
RUN;

/* Reading File 6 */
PROC IMPORT OUT = yogurt_panel_grocery
            DATAFILE= "C:\Chirag\Study\2_Spring 2017\Marketing Predictive Analytics using SAS - BUAN 6337\Project\Aadesh_Yogurt - Modified\6_yogurt_PANEL_GR_1114_1165.csv" 
            DBMS=csv REPLACE;
			GETNAMES=YES; 
RUN;

/* Reading File 7*/
PROC IMPORT OUT = yogurt_panel_mass
            DATAFILE= "C:\Chirag\Study\2_Spring 2017\Marketing Predictive Analytics using SAS - BUAN 6337\Project\Aadesh_Yogurt - Modified\7_yogurt_PANEL_MA_1114_1165.csv" 
            DBMS=csv REPLACE;
			GETNAMES=YES; 
RUN;

/* Reading File 8*/
PROC IMPORT OUT = yogurt_groc_sample
            DATAFILE= "C:\Chirag\Study\2_Spring 2017\Marketing Predictive Analytics using SAS - BUAN 6337\Project\Aadesh_Yogurt - Modified\Yogurt_groc_sample.xlsx" 
            DBMS=xlsx REPLACE;
			GETNAMES=YES; 
RUN;

/* Grand File - Merging File 6 with File 0 */

proc sort data = yogurt_panel_grocery;
by PANID;
run;

proc sort data = demographic_data;
by PANID;
run;

data grand_file;
merge yogurt_panel_grocery demographic_data;
by PANID;
IF WEEK then output;
run;

/*proc print data = grand_file (obs = 1000);
run;*/

/* Grand File 1 - Merging Grand File with File 2 */

proc sort data = grand_file;
by COLUPC;
run;

proc sort data = yogurt_brand_data;
by COLUPC;
run;

data grand_file_1;
merge yogurt_brand_data grand_file;
by COLUPC;
if PANID then output;
run;

/* Grand File 2 - Merging Grand File 1 with File 1 */

proc sort data = grand_file_1;
by IRI_KEY;
run;

proc sort data = delivery_stores;
by IRI_KEY;
run;

data grand_file_2;
merge grand_file_1 delivery_stores;
by IRI_KEY;
if level and colupc and panid then output;
run;

proc print data = grand_file_2 (obs = 100);
run;

/* sorting file 8 and grand file 2 by Colupc, IRI, Week

Proc sort data = yogurt_groc_sample;
by COLUPC IRI_KEY WEEK;
run;

Proc sort data = grand_file_2;
by COLUPC IRI_KEY WEEK;
run;

Proc means data = grand_file_2;
run;*/


/* Last Merging - Ultimate File 
data ultimate_file;
merge grand_file_2(rename = (DOLLARS = P_DOLLARS UNITS = P_UNITS)) yogurt_groc_sample (drop = SY GE	VEND ITEM);
by COLUPC IRI_KEY WEEK;
IF LEVEL and PANID and DOLLARS and D then output;
run;

proc print data = ultimate_file;
run;*/


/*Ultimate file - 2 merging File 2 and file 8*/
Proc sort data = yogurt_groc_sample;
by COLUPC;
run;

Proc sort data = yogurt_brand_data;
by COLUPC;
run;
DATA ultimate_file_2;
merge yogurt_groc_sample (IN=aa) yogurt_brand_data (DROP = UPC SY GE VEND ITEM);
IF aa;
by COLUPC;
IF WEEK and LEVEL then output;
RUN;

PROC PRINT DATA=ultimate_file_2 (obs=10);
RUN;


%macro rfm(input=,custid=,datevar=,enddate=,money=,splits=,rfmvar=,output=);
%*Summarise Monetary, transactions (frequency) and recency by custid;
Proc SQL;
create table pre_rfm as
Select &custid
	   ,sum(&money) as monetary
	   ,count(&datevar) as freq
	   ,min(datdif(&datevar,&enddate,'actual')) as day
from &input
group by 1;
quit;
%*Rank tot_money num_trans diff_day;
proc rank data=pre_rfm out=pre_rfm2 ties=low descending groups=&splits; 
     var day;
   ranks R;
run;
proc rank data=pre_rfm2 out=rfm ties=low groups=&splits ; 
     var freq monetary ;
   ranks  F M;
run; 
%*Create rfm score variable; 
data &output;
set rfm;
R+1;
F+1;
M+1;
&rfmvar=cats(R,F,M)+0;
run;

proc datasets library=work nolist ;
delete pre_rfm  pre_rfm2 rfm;
quit;

%mend rfm;

%rfm (input=grand_file_2,custid=PANID,datevar=WEEK,enddate=1165,money=DOLLARS,splits=5,rfmvar=MYRFM,output=RFM_out);

Proc sort data = RFM_OUT ;
by DESCending MYRFM ;
run;

Proc print data = RFM_OUT;
run;

proc cluster data=rfm_out 
outtree=tree method=ward NOTIE k=3000; 
var R F M; copy PANID MYRFM; run;

title 'Tree Diagram using METHOD = WARD'; 
proc tree data = tree out = rfm_OUT_Clusters nclusters = 4; id PANID; copy MYRFM; run;


proc sort data = rfm_OUT_Clusters; by PANID;run;
proc sort data = demographic_data; by PANID;run;
data rfm_OUT_Clusters_DEMO; 
MERGE rfm_OUT_Clusters (in = aa) demographic_data;
If aa then output;
by PANID;run;

proc print data = rfm_OUT_Clusters_DEMO; 
run;

proc means data = rfm_OUT_Clusters_DEMO; 
class CLUSTER; 
run;

/*proc arbor data=demographic_data alpha = 0.2 padjust = CHAIDBEFORE DEPTH event = "4"; 
input Panelist_Type	Combined_Pre-Tax_Income_of_HH HH_RACE Year/ level = nominal; 
target CLUSTER / level = nominal Criterion=PROBCHISQ; 
Performance DISK nodesize=20000 ; 
Assess NoValidata measure=MISC ; 
save MODEL=OUTTREE NODESTAT= OUTNODES TOPOLOGY= OUTTOPOLOGY; run;*/

/* frequncy of brands*/
PROC FREQ DATA=ultimate_file_2 ORDER=freq;
TABLE L3;
RUN;


/*Company vs Dollar sales analysis*/
PROC SQL;
SELECT L3 AS COMPANY,sum(DOLLARS) AS DOLLAR_SALES
FROM
ULTIMATE_FILE_2
GROUP BY L3
ORDER BY DOLLAR_SALES DESC;
QUIT;

/* Weekly units sold for YOGURT*/
PROC SQL;
SELECT WEEK ,sum(UNITS) AS UNITS_SOLD
FROM
ULTIMATE_FILE_2
WHERE WEEK>1137
GROUP BY WEEK
ORDER BY UNITS_SOLD DESC;
QUIT;

/*Market by Units sold*/
PROC SQL;
SELECT MARKET_NAME, SUM(UNITS) AS UNITS_SOLD
FROM
GRAND_FILE_2
GROUP BY MARKET_NAME
ORDER BY UNITS_SOLD DESC;
QUIT;

/*Brands vs Dollar Sales*/
PROC SQL;
SELECT L5 AS COMPANY,sum(DOLLARS) AS DOLLAR_SALES
FROM
ULTIMATE_FILE_2
GROUP BY L5
ORDER BY DOLLAR_SALES DESC;
QUIT;

/* Filter top second company DANNON for RFM---- 29839 records*/
DATA RFM_BRAND_DANNON;
SET GRAND_FILE_2;
IF L3 = 'GROUPE DAN' then output;
RUN;

DATA RFM_PRODUCT_YOPLAIT_TRIX;
SET GRAND_FILE_2;
IF L5 = 'YOPLAIT TRIX' then output;
RUN;

proc print data = RFM_PRODUCT_YOPLAIT_TRIX;
run;


/* RFM Analysis Yoplait Trix*/
%rfm (input=RFM_PRODUCT_YOPLAIT_TRIX,custid=PANID,datevar=WEEK,enddate=1165,money=DOLLARS,splits=5,rfmvar=RFM_SCORE,output=RFM_PRODUCT_YP_TRIX);

/*YOPLAIT*/
Proc sort data = RFM_PRODUCT_YP_TRIX ;
by DESCending RFM_SCORE;
run;

Proc print data = RFM_PRODUCT_YP_TRIX;
run;

proc freq data = RFM_PRODUCT_YP_TRIX order = freq;
table PANID;
run;

Proc print data = RFM_PRODUCT_YP_TRIX;
where R = 1 and F = 1 and M = 1;
run;


proc cluster data=RFM_PRODUCT_YP_TRIX
outtree=tree method=ward NOTIE k=3000; 
var R F M; copy PANID RFM_SCORE; run;

title 'Tree Diagram using METHOD = WARD'; 
proc tree data = tree out = rfm_OUT_Clusters_YP_TRIX nclusters = 3; id PANID; copy RFM_SCORE; run;


proc sort data = rfm_OUT_Clusters_YP_TRIX; by PANID;run;
proc sort data = demographic_data; by PANID;run;
data rfm_OUT_Clusters_YP_TRIX_DEMO; 
MERGE rfm_OUT_Clusters_YP_TRIX (in = aa) demographic_data;
If aa then output;
by PANID;run;

proc print data = rfm_OUT_Clusters_YP_TRIX_DEMO; 
run;

proc freq data = rfm_OUT_Clusters_YP_TRIX_DEMO;
table CLUSNAME;
run; 

proc means data = rfm_OUT_Clusters_YP_TRIX_DEMO; 
class CLUSTER; 
run;

/*data Economy_Minded;
set rfm_OUT_Clusters_YP_TRIX_DEMO;
IF CLUSTER = 2 then output;
run;

data Best_Customers;
set rfm_OUT_Clusters_YP_TRIX_DEMO;
IF CLUSTER = 1 then output;
run;

data Deadbeats;
set rfm_OUT_Clusters_YP_TRIX_DEMO;
IF CLUSTER = 3 then output;
run;
*/

/*

PROC TABULATE DATA=GRAND_FILE_2;
CLASS IRI_KEY WEEK;
VAR DOLLARS;
TABLE IRI_KEY*WEEK,DOLLARS*SUM;
RUN;
*/

/* Panel data analysis (PROC PANEL) */

data product2;
set yogurt_brand_data;
GE1=GE*1.0;
COLUPCN=COLUPC*1.0;
keep SY GE1 VEND ITEM COLUPCN COLUPC L3 L4 L5 VOL_EQ PRODUCT_TYPE PACKAGE FLAVOR_SCENT FAT_CONTENT CALORIE_LEVEL STYLE TYPE_OF_YOGURT;
run;



/* Brands purchased by different panels Yogurt_panel_gr left outer join Prod_yogurt on colupc*/
proc sql;
create table P_gr AS
select p.PANID, p.WEEK, p.UNITS, p.DOLLARS, p.COLUPC, pd.L4, pd.VOL_EQ
from yogurt_panel_grocery p left outer join product2 pd ON p.COLUPC=pd.COLUPCN;
quit;

/*
PROC FREQ DATA=P_gr order=freq;
TABLE L4;
RUN;
*/

/* create L4=YOPLAIT US dummy variable and Other brands in other dummy variable*/
data Pan_gr;
set P_gr;
brand="other";
if L4="YOPLAIT US" then brand="br1";
else brand="other";

/* keep only br2 brand*/
if brand ~= "br1" then
	DELETE;

pricePerUnit=DOLLARS/UNITS;
pricePerVOLEQ=pricePerUnit/VOL_EQ;
totalVOLEQ=UNITS*VOL_EQ;

drop L4;
drop COLUPC;
drop VOL_EQ;
run;

proc print data = Pan_gr;
run;

/*create table Pan_gr2*/
proc sql;
CREATE TABLE Pan_gr2 AS
SELECT PANID, WEEK, SUM(UNITS) as totalUnits, sum(DOLLARS) as totalSpent, sum(totalVOLEQ) as totalBoughtVOL, count(*) as noOfTran, avg(pricePerVOLEQ) as avg_pricePerVOLEQ 
FROM Pan_gr group by PANID, WEEK;
quit;
/*
PROC CONTENTS DATA=demographic_data;
RUN;
*/

/* join with demo data to get the other demographics of panalists*/
proc sql;
CREATE TABLE Pgr AS
SELECT p.PANID, p.WEEK, p.totalUnits, p.totalSpent, p.totalBoughtVOL, p.noOfTran, p.avg_pricePerVOLEQ, d.Combined_Pre_Tax_Income_of_HH as CPIHH, d.Family_Size, d.HH_RACE, d.Type_of_Residential_Possession as TRP, d.Age_Group_Applied_to_Male_HH as AGAMHH, d.Education_Level_Reached_by_Male as ELRMHH, d.Occupation_Code_of_Male_HH as OCMHH, d.Male_Working_Hour_Code as MWHC, d.Age_Group_Applied_to_Female_HH as AGAFHH, d.Education_Level_Reached_by_Femal as ELRFHH, d.Education_Level_Reached_by_Femal as OCFHH, d.Female_Working_Hour_Code as FWHC, d.Number_of_Dogs as NoDogs, d.Number_of_Cats as NoCats, d.Children_Group_Code as CGC, d.Marital_Status as MS, d.Year
FROM Pan_gr2 p LEFT OUTER JOIN demographic_data d ON p.PANID=d.PANID;
quit;

proc contents data = demographic_data;
run;

/*verify NOUNIQUE 1190 records from sort*/
/*
PROC SQL;
SELECT count(cnt) from
(
SELECT count(PANID) as cnt,PANID from Pgr 
group by PANID
having count(PANID)=1
);
QUIT;
*/

proc sort data=Pgr;
by PANID WEEK;
run;
proc sort data=Pgr out=Pgr1 NOUNIQUEKEY; by PANID; run;
 
PROC PRINT DATA=Pgr1 (obs=10);
RUN;

/* VCOMP=WK represents unbalanced cross section and /fixone represents fixed effects model*/
Proc Panel data=Pgr1;       
id PANID WEEK;       
model totalSpent = totalBoughtVOL avg_pricePerVOLEQ ELRMHH CGC NoDogs AGAMHH / RANONE VCOMP=WK; /* FIXONE RANONE btwng;*/
Run;

Proc Panel data=Pgr1;       
id PANID WEEK;       
model totalSpent = totalBoughtVOL avg_pricePerVOLEQ ELRMHH CGC NoDogs AGAMHH / FIXONE VCOMP=WK; /* FIXONE RANONE btwng;*/
Run;
/* MISSING VALUES ANALYSIS */
proc means data = Pgr1 n nmiss;
var ELRMHH NoDogs CGC AGAMHH;
run;




/* PROC PANEL on Economy Minded */
/*
data product2;
set yogurt_brand_data;
GE1=GE*1.0;
COLUPCN=COLUPC*1.0;
keep SY GE1 VEND ITEM COLUPCN COLUPC L3 L4 L5 VOL_EQ PRODUCT_TYPE PACKAGE FLAVOR_SCENT FAT_CONTENT CALORIE_LEVEL STYLE TYPE_OF_YOGURT;
run;



/* Brands purchased by different panels Yogurt_panel_gr left outer join Prod_yogurt on colupc*/
/*
proc sql;
create table P_gr AS
select p.PANID, p.WEEK, p.UNITS, p.DOLLARS, p.COLUPC, pd.L4, pd.VOL_EQ
from yogurt_panel_grocery p left outer join product2 pd ON p.COLUPC=pd.COLUPCN;
quit;

/*
PROC FREQ DATA=P_gr order=freq;
TABLE L4;
RUN;
*/

/* create L4=YOPLAIT US dummy variable and Other brands in other dummy variable*/
/*
data Pan_gr;
set P_gr;
brand="other";
if L4="YOPLAIT US" then brand="br1";
else brand="other";

/* keep only br2 brand*/
/*
if brand ~= "br1" then
	DELETE;

pricePerUnit=DOLLARS/UNITS;
pricePerVOLEQ=pricePerUnit/VOL_EQ;
totalVOLEQ=UNITS*VOL_EQ;

drop L4;
drop COLUPC;
drop VOL_EQ;
run;

proc print data = Pan_gr;
run;

/* merging Economy_minded with panel_yogurt_data to replace Pan_gr with this file */
/*
proc sort data = Economy_Minded;
by PANID;
run;

proc sort data = Pan_gr;
by PANID;
run;

data Pan_gr_1;
merge Economy_Minded Pan_gr;
by PANID;
IF PANID and RFM_Score then output;
run;

proc print data = Pan_gr_1 (obs = 10);
run;

/*create table Pan_gr2*/
/*
proc sql;
CREATE TABLE Pan_gr2 AS
SELECT PANID, WEEK, SUM(UNITS) as totalUnits, sum(DOLLARS) as totalSpent, sum(totalVOLEQ) as totalBoughtVOL, count(*) as noOfTran, avg(pricePerVOLEQ) as avg_pricePerVOLEQ 
FROM Pan_gr_1 group by PANID, WEEK;
quit;
/*
PROC CONTENTS DATA=demographic_data;
RUN;
*/

/* join with demo data to get the other demographics of panalists*/
/*
proc sql;
CREATE TABLE Pgr AS
SELECT p.PANID, p.WEEK, p.totalUnits, p.totalSpent, p.totalBoughtVOL, p.noOfTran, p.avg_pricePerVOLEQ, d.Combined_Pre_Tax_Income_of_HH as CPIHH, d.Family_Size, d.HH_RACE, d.Type_of_Residential_Possession as TRP, d.Age_Group_Applied_to_Male_HH as AGAMHH, d.Education_Level_Reached_by_Male as ELRMHH, d.Occupation_Code_of_Male_HH as OCMHH, d.Male_Working_Hour_Code as MWHC, d.Age_Group_Applied_to_Female_HH as AGAFHH, d.Education_Level_Reached_by_Femal as ELRFHH, d.Education_Level_Reached_by_Femal as OCFHH, d.Female_Working_Hour_Code as FWHC, d.Number_of_Dogs as NoDogs, d.Number_of_Cats as NoCats, d.Children_Group_Code as CGC, d.Marital_Status as MS, d.Year
FROM Pan_gr2 p LEFT OUTER JOIN demographic_data d ON p.PANID=d.PANID;
quit;

proc contents data = demographic_data;
run;

/*verify NOUNIQUE 1190 records from sort*/
/*
PROC SQL;
SELECT count(cnt) from
(
SELECT count(PANID) as cnt,PANID from Pgr 
group by PANID
having count(PANID)=1
);
QUIT;
*/
/*
proc sort data=Pgr;
by PANID WEEK;
run;
proc sort data=Pgr out=Pgr1 NOUNIQUEKEY; by PANID; run;
 
PROC PRINT DATA=Pgr1 (obs=10);
RUN;

/* VCOMP=WK represents unbalanced cross section and /fixone represents fixed effects model*/
/*
Proc Panel data=Pgr1;       
id PANID WEEK;       
model totalSpent = totalBoughtVOL avg_pricePerVOLEQ CPIHH Family_Size AGAMHH CGC NoDogs NoCats / RANONE VCOMP=WK; /* FIXONE RANONE btwng;*/
/*Run;

*/
